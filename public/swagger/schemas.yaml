components:
    schemas: { Role: { description: Role, type: object, properties: { id: { description: 'Role identifier', type: string, example: moderator }, description: { description: 'Role description', type: string, example: Moderator }, createdAt: { description: 'Role creation date', type: object, properties: { date: { type: string, format: date-time }, timezone_type: { type: integer }, timezone: { type: string } }, example: { date: '2020-12-31 23:59:59', timezone_type: 3, timezone: Etc/GMT+3 } }, updatedAt: { description: 'Role update date', type: object, properties: { date: { type: string, format: date-time }, timezone_type: { type: integer }, timezone: { type: string } }, example: { date: '2020-12-31 23:59:59', timezone_type: 3, timezone: Etc/GMT+3 } } } }, User: { description: User, type: object, properties: { id: { description: 'User identifier', type: integer, format: int32, example: 1 }, firstName: { description: 'User first name', type: string, example: Layla }, lastName: { description: 'User last name', type: string, example: Schultz }, createdAt: { description: 'User creation date', type: object, properties: { date: { type: string, format: date-time }, timezone_type: { type: integer }, timezone: { type: string } }, example: { date: '2020-12-31 23:59:59', timezone_type: 3, timezone: Etc/GMT+3 } }, updatedAt: { description: 'User update date', type: object, properties: { date: { type: string, format: date-time }, timezone_type: { type: integer }, timezone: { type: string } }, example: { date: '2020-12-31 23:59:59', timezone_type: 3, timezone: Etc/GMT+3 } }, role: { $ref: '#/components/schemas/Role' } } }, UserCreateRequest: { description: Request, type: object, properties: { firstName: { description: 'User first name', type: string, example: Layla }, lastName: { description: 'User last name', type: string, example: Schultz }, password: { description: 'User password', type: string, example: '******' }, role: { description: 'Role identifier [ moderator | admin | user ]', type: string, example: moderator } } }, UserUpdateRequest: { $ref: '#/components/schemas/UserCreateRequest' }, ErrorResponse: { description: Response, type: object, properties: { message: { type: string, description: 'ApiError message' } } }, RoleReadResponse: { description: Response, type: object, properties: { data: { $ref: '#/components/schemas/Role' } } }, RoleListResponse: { description: Response, type: object, properties: { data: { description: 'Resource data', type: array, items: { $ref: '#/components/schemas/Role' } }, limit: { description: 'Maximum number of resources returned per request', type: integer, example: 10 }, offset: { description: 'Indicates the starting position of the reading', type: integer, example: 0 }, total: { description: 'Total number of resources', type: integer, example: 100 }, count: { description: 'Number of resources returned on current request', type: integer, example: 10 } } }, UserCreateResponse: { description: Response, type: object, properties: { data: { $ref: '#/components/schemas/User' } } }, UserReadResponse: { description: Response, type: object, properties: { data: { $ref: '#/components/schemas/User' } } }, UserListResponse: { description: Response, type: object, properties: { data: { description: 'Resource data', type: array, items: { $ref: '#/components/schemas/User' } }, limit: { description: 'Maximum number of resources returned per request', type: integer, example: 10 }, offset: { description: 'Indicates the starting position of the reading', type: integer, example: 0 }, total: { description: 'Total number of resources', type: integer, example: 100 }, count: { description: 'Number of resources returned on current request', type: integer, example: 10 } } }, UserUpdateResponse: { description: Response, type: object, properties: { data: { $ref: '#/components/schemas/User' } } } }
